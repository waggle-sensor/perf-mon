- name: Provision 
  hosts: test_node
  # become_user: root
  become: true
  gather_facts: no

  vars:
    k3s_namespace: perf-mon
    scrape_interval: 15s
    k3s_cluster_cidr: "10.31.0.0/16"
    k3s_service_cidr: "10.32.0.0/16"
    # ansible_python_interpreter: "{{ ansible_playbook_python }}"

  tasks:
  - name: install helpful tools
    apt:
      pkg:
      - curl
      - python3-pip

  - name: Install Python Kubernetes package
    pip:
      name:
      - kubernetes
        # - pyhelm
      state: present

  # This is all that worked
  - name: Install Python OpenShift package
    shell: pip install openshift

  - name: Install K3s via curl
    shell: curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION=v1.25.4+k3s1 INSTALL_K3S_SKIP_ENABLE=true K3S_AGENT_TOKEN=4tX0DUZ0uQknRtVUAKjt sh -
    args:
      executable: /bin/bash

  - name: Get k3s version
    command: k3s --version
    register: k3s_version_output
    changed_when: false
    ignore_errors: true

  - name: Print k3s version
    debug:
      msg: "{{ k3s_version_output.stdout_lines[0].split(' ')[2] }}"

  - name: Install Helm chart
    shell: curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
    args:
      executable: /bin/bash
  
  - name: Ensure k3s systemd is in running state
    service:
      name: k3s
      state: started
    register: k3sDetails
    until: k3sDetails.status.ActiveState == "active"
    retries: 10
    delay: 5

  - name: Create directory .kube
    when: ansible_user is defined
    file:
      path: ~{{ ansible_user }}/.kube
      state: directory
      owner: "{{ ansible_user }}"
      mode: "u=rwx,g=rx,o="

  - name: Copy config file to user home directory
    when: ansible_user is defined
    copy:
      src: /etc/rancher/k3s/k3s.yaml
      dest: ~{{ ansible_user }}/.kube/config
      remote_src: true
      owner: "{{ ansible_user }}"
      mode: "u=rw,g=,o="

  - name: Configure default KUBECONFIG for user
    when: ansible_user is defined
    #shell: "export KUBECONFIG=~/kube/config"
    lineinfile:
     path: ~{{ ansible_user }}/.bashrc
     regexp: 'export KUBECONFIG=~/.kube/config'
     line: 'export KUBECONFIG=~/.kube/config # Added by k3s-ansible'
     state: present

  - name: Create our namespace in Kubernetes
    # shell: "kubectl create namespace {{ k3s_namespace }}"
    k8s:
      kubeconfig: /etc/rancher/k3s/k3s.yaml
      name: "{{ k3s_namespace }}"
      api_version: v1
      kind: Namespace
      state: present

  - name: Test 
    debug: 
      msg: "{{ lookup( 'url', 'https://raw.githubusercontent.com/grafana/agent/main/operations/agent-static-operator/crds/monitoring.coreos.com_podmonitors.yaml') }}"

  - name: Download Grafana CRDs
    shell: wget -P /tmp/ 'https://raw.githubusercontent.com/grafana/agent/main/operations/agent-static-operator/crds/{{ item }}'; kubectl apply -f /tmp/{{ item }}
    with_items:
    - monitoring.coreos.com_podmonitors.yaml  
    - monitoring.coreos.com_probes.yaml
    - monitoring.coreos.com_servicemonitors.yaml
    - monitoring.grafana.com_grafanaagents.yaml
    - monitoring.grafana.com_integrations.yaml
    - monitoring.grafana.com_logsinstances.yaml
    - monitoring.grafana.com_metricsinstances.yaml
    - monitoring.grafana.com_podlogs.yaml

  #- name: Install Grafana CRDs
  #  k8s:
  #    kubeconfig: /etc/rancher/k3s/k3s.yaml
  #    state: present
  #    definition: "{{ lookup( 'url', 'https://raw.githubusercontent.com/grafana/agent/main/operations/agent-static-operator/crds/monitoring.coreos.com_podmonitors.yaml' ) }}" 
      #with_items:
      #- lookup( 'url', 'https://raw.githubusercontent.com/grafana/agent/main/operations/agent-static-operator/crds/monitoring.coreos.com_podmonitors.yaml') 
      #- "{{ lookup( "url", "https://raw.githubusercontent.com/grafana/agent/main/operations/agent-static-operator/crds/monitoring.coreos.com_probes.yaml") | from_yaml }}"
      #- "{{ lookup( "url", "https://raw.githubusercontent.com/grafana/agent/main/operations/agent-static-operator/crds/monitoring.coreos.com_servicemonitors.yaml") | from_yaml }}"
      #- "{{ lookup( "url", "https://raw.githubusercontent.com/grafana/agent/main/operations/agent-static-operator/crds/monitoring.grafana.com_grafanaagents.yaml") | from_yaml }}"
      #- "{{ lookup( "url", "https://raw.githubusercontent.com/grafana/agent/main/operations/agent-static-operator/crds/monitoring.grafana.com_integrations.yaml") | from_yaml }}"
      #- "{{ lookup( "url", "https://raw.githubusercontent.com/grafana/agent/main/operations/agent-static-operator/crds/monitoring.grafana.com_logsinstances.yaml") | from_yaml }}"
      #- "{{ lookup( "url", "https://raw.githubusercontent.com/grafana/agent/main/operations/agent-static-operator/crds/monitoring.grafana.com_metricsinstances.yaml") | from_yaml }}"
      #- "{{ lookup( "url", "https://raw.githubusercontent.com/grafana/agent/main/operations/agent-static-operator/crds/monitoring.grafana.com_podlogs.yaml") | from_yaml }}"
      #  ignore_errors: true
  
  - name: Add grafana mimir to Helm chart
    shell: "helm repo add grafana https://grafana.github.io/helm-charts"

  - name: Update Helm Repos
    shell: "helm repo update"

  - name: Deploy Grafana mimir in Kubernetes
    shell: "helm -n {{ k3s_namespace }} install mimir grafana/mimir-distributed"
    environment:
      KUBECONFIG: "/etc/rancher/k3s/k3s.yaml"

    #helm:
            # kubeconfig: /etc/rancher/k3s/k3s.yaml
            #  name: mimir
            #namespace: "{{ k3s_namespace }}"
            #chart:
            #ref: grafana/mimir-distributed
            #version: 5.2.1
  
  - name: Deploy Jetson Exporter in Kubernetes
    k8s:
      kubeconfig: /etc/rancher/k3s/k3s.yaml
      state: present
      namespace: "{{ k3s_namespace }}"
      definition: "{{ lookup('template', 'kubernetes/jetson-exporter.yaml') | from_yaml_all }}"


  - name: Create ConfigMap for Grafana dashboard
    k8s:
      kubeconfig: /etc/rancher/k3s/k3s.yaml
      state: present
      namespace: "{{ k3s_namespace }}"
      definition: "{{ lookup('template', 'kubernetes/grafana-config-datasources.yaml.j2') | from_yaml_all }}"

  - name: Deploy Grafana dashboard
    k8s:
      kubeconfig: /etc/rancher/k3s/k3s.yaml
      state: present
      namespace: "{{ k3s_namespace }}"
      definition: "{{ lookup('file', 'kubernetes/grafana.yaml') | from_yaml_all }}"

  - name: Install Grafana operator
    k8s:
      kubeconfig: /etc/rancher/k3s/k3s.yaml
      state: present
      namespace: "{{ k3s_namespace }}"
      definition: "{{ lookup('template', 'kubernetes/grafana-operator.yaml.j2') | from_yaml_all }}"

  - name: Install Grafana agent
    k8s:
      kubeconfig: /etc/rancher/k3s/k3s.yaml
      state: present
      namespace: "{{ k3s_namespace }}"
      definition: "{{ lookup('template', 'kubernetes/grafana-agent.yaml.j2') | from_yaml_all }}"

  - name: Deploy Grafana operator scrapers
    k8s:
      kubeconfig: /etc/rancher/k3s/k3s.yaml
      state: present
      namespace: "{{ k3s_namespace }}"
      definition: "{{ lookup('template', 'kubernetes/grafana-operator-scrape.yaml.j2') | from_yaml_all }}"

  - name: Get pods
    command: kubectl get pod
    register: kubectl_pods
    changed_when: false
    ignore_errors: true

  - name: Print pods
    debug:
      msg: "{{ kubectl_pods }}"
